version: '3.7'

services:
  web:
    build: .
    command: python /code/manage.py runserver 0.0.0.0:8000
    environment:
      - SECRET_KEY=p_o3vp1rg5)t^lxm9-43%0)s-=1qpeq%o7gfq+e4#*!t+_ev82
      - DEBUG=1
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - db
  db:
    image: postgres:11
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    ports:
      - "5432:5432"

  python:
    build: scripts/
    command: python /scripts/zmq_bot.py
    ports:
      - "28332:28332"
    networks:
      - bitcoin

  crownd:
    build: node_crw/
    ports:
      - "9341:9341"
    networks:
      - bitcoin
    volumes:
      - crown_data:/data


  bitcoind:
    image: amacneil/bitcoin
    # specify additional command line arguments here
    command: bitcoind
    healthcheck:
      test: ["CMD", "/entrypoint.sh", "bitcoin-cli", "getblockchaininfo"]
    ports:
      # change to 18333 if running testnet
      - "18333:18333"
    volumes:
      - bitcoin_data:/data
    networks:
      - bitcoin

  reverse-proxy:
    image: traefik:alpine
    command: --api --docker
    ports:
      - "8400:8400"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  whoami:
    image: emilevauge/whoami
    labels:
      - "traefik.frontend.rule=Host:whoami.docker.localhost"

  monitoring:
    image: nicolargo/glances:latest-alpine
    restart: always
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "GLANCES_OPT=-w"
    labels:
      - "traefik.port=61208"
      - "traefik.frontend.rule=Host:glances.docker.localhost"

volumes:
  postgres_data:
  bitcoin_data:
  crown_data:

networks:
  bitcoin: